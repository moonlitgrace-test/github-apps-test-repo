name: "Lint fix"

on:
  push:
    branches:
      - "*"

permissions:
  contents: write
  pull-requests: write

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Setup node
        uses: actions/setup-node@v4

      - name: Install dependencies
        run: npm ci

      - name: Run ESLint with --fix
        run: npm run lint:fix
        continue-on-error: true

      - name: Setup github user
        uses: fregante/setup-git-user@v2

      - name: Commit and Push if lint errors were fixed
        id: commit_and_push_changes
        run: |
          BRANCH_NAME="moonlint-fixes-${{ github.head_ref || github.ref_name }}"

          git fetch origin

          if [ -n "$(git rev-parse --verify "$BRANCH_NAME" >/dev/null 2>&1)" ]; then
            echo "Branch $BRANCH_NAME exists, checking out..."
            git checkout "$BRANCH_NAME"
            git pull origin "$BRANCH_NAME" --rebase
          else
            echo "Branch $BRANCH_NAME does not exist, creating and checking out..."
            git checkout -b "$BRANCH_NAME"
          fi

          if [ -n "$(git status --porcelain)" ]; then
            git add .
            git commit -m "chore: fix lint errors"
            git push -u origin "$BRANCH_NAME"
            echo "branch=$BRANCH_NAME" >> $GITHUB_ENV
          else
            echo "No lint errors, skipping commit"
            echo "branch=" >> $GITHUB_ENV
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # - name: Create a PR if lint errors were fixed
      #   if: ${{ env.branch != '' }}
      #   run: |
      #     BRANCH_NAME="${{ env.branch }}"

      #     gh pr create \
      #       --title "chore: fix lint errors" \
      #       --body "This PR fixes lint errors on branch: $BRANCH_NAME" \
      #       --head "$BRANCH_NAME" \
      #       --base "${{ github.ref_name }}"
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
